import { PrismaClient } from "@prisma/client";

const prisma = new PrismaClient();

export const seedChaptersAndLessons = async () => {
  console.log("üå± Seeding Chapters & Lessons...");

  // L·∫•y t·∫•t c·∫£ c√°c course hi·ªán c√≥
  const courses = await prisma.course.findMany();

  if (courses.length === 0) {
    console.warn("‚ö†Ô∏è Kh√¥ng c√≥ kh√≥a h·ªçc n√†o. H√£y seed course tr∆∞·ªõc!");
    return;
  }

  for (const course of courses) {
    const numberOfChapters = Math.floor(Math.random() * 3) + 2; // 2‚Äì4 ch∆∞∆°ng
    let totalCourseDuration = 0;

    for (let c = 1; c <= numberOfChapters; c++) {
      // t·∫°o chapter
      const chapter = await prisma.chapter.create({
        data: {
          title: `Ch∆∞∆°ng ${c}: Ki·∫øn th·ª©c n·ªÅn t·∫£ng`,
          description: `Gi·ªõi thi·ªáu n·ªôi dung v√† m·ª•c ti√™u c·ªßa ch∆∞∆°ng ${c} trong kh√≥a h·ªçc.`,
          orderIndex: c,
          courseId: course.id,
        },
      });

      const numberOfLessons = Math.floor(Math.random() * 4) + 3; // 3‚Äì6 b√†i/ ch∆∞∆°ng
      let totalChapterDuration = 0;

      for (let l = 1; l <= numberOfLessons; l++) {
        const duration = Math.floor(Math.random() * 10) + 5; // 5‚Äì15 ph√∫t m·ªói b√†i
        totalChapterDuration += duration;
        totalCourseDuration += duration;

        await prisma.lesson.create({
          data: {
            title: `B√†i ${l}: N·ªôi dung chi ti·∫øt`,
            content: `<p>N·ªôi dung chi ti·∫øt c·ªßa b√†i ${l} trong ch∆∞∆°ng ${c}.</p>`,
            videoUrl: "https://res.cloudinary.com/dzfansbci/video/upload/v1760908597/lessons/aw27co0qcwuyipvukzgg.mp4",
            duration,
            orderIndex: l,
            courseId: course.id,
            chapterId: chapter.id,
          },
        });
      }

      // c·∫≠p nh·∫≠t duration c·ªßa ch∆∞∆°ng
      await prisma.chapter.update({
        where: { id: chapter.id },
        data: { duration: totalChapterDuration },
      });

      console.log(
        `‚úÖ T·∫°o Chapter ${c} (${totalChapterDuration} ph√∫t) cho kh√≥a: ${course.title}`
      );
    }

    // c·∫≠p nh·∫≠t duration c·ªßa kh√≥a h·ªçc
    await prisma.course.update({
      where: { id: course.id },
      data: { duration: totalCourseDuration },
    });

    console.log(
      `üéì C·∫≠p nh·∫≠t t·ªïng th·ªùi l∆∞·ª£ng: ${totalCourseDuration} ph√∫t cho kh√≥a h·ªçc "${course.title}"`
    );
  }

  console.log("üéâ Seed Chapters & Lessons th√†nh c√¥ng!");
};
